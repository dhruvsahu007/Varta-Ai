{
  "timestamp": "2025-07-09T17:58:42.390Z",
  "summary": {
    "totalTests": 0,
    "passedTests": 0,
    "failedTests": 0,
    "skippedTests": 0,
    "coverage": {
      "statements": 0,
      "branches": 0,
      "functions": 0,
      "lines": 0
    }
  },
  "categories": [
    {
      "name": "Unit Tests",
      "status": "failed",
      "tests": 0,
      "passed": 0,
      "failed": 0,
      "duration": 0,
      "errors": [
        "Command failed: npx jest tests/server/**/*.test.ts tests/client/**/*.test.tsx tests/shared/**/*.test.ts --verbose --json\nFAIL tests/server/ai.test.ts (12.972 s)\n  AI Module\n    analyzeTone\n      × should analyze tone successfully (6 ms)\n      √ should handle analysis errors gracefully (1 ms)\n      √ should handle invalid JSON response\n    generateReply\n      × should generate single reply successfully\n      × should generate multiple replies when requested (1 ms)\n      × should handle reply generation errors (12 ms)\n      × should validate confidence values\n    queryOrgMemory\n      × should query organizational memory successfully (1 ms)\n      × should handle empty message context (1 ms)\n    generateMeetingNotes\n      × should generate meeting notes successfully (1 ms)\n      × should handle meeting notes generation errors (2 ms)\n      × should extract participants from messages (1 ms)\n\n  ● AI Module › analyzeTone › should analyze tone successfully\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  6\n\n      Object {\n        \"clarity\": \"clear\",\n    -   \"confidence\": 85,\n    -   \"explanation\": \"The message is clear but could be more engaging\",\n    -   \"impact\": \"high\",\n    -   \"suggestedTones\": Array [\n    -     \"friendly\",\n    -     \"casual\",\n    -   ],\n    -   \"suggestions\": Array [\n    -     \"Consider being more direct\",\n    -   ],\n    -   \"tone\": \"professional\",\n    +   \"confidence\": 0,\n    +   \"explanation\": \"\",\n    +   \"impact\": \"medium\",\n    +   \"suggestedTones\": Array [],\n    +   \"suggestions\": Array [],\n    +   \"tone\": \"neutral\",\n      }\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m analyzeTone(\u001b[32m'Hello team, please review this document.'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual({\n     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m         tone\u001b[33m:\u001b[39m \u001b[32m'professional'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 57 |\u001b[39m         impact\u001b[33m:\u001b[39m \u001b[32m'high'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 58 |\u001b[39m         clarity\u001b[33m:\u001b[39m \u001b[32m'clear'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at tests/server/ai.test.ts:55:22\n      at fulfilled (tests/server/ai.test.ts:5:58)\n\n  ● AI Module › generateReply › should generate single reply successfully\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should generate multiple replies when requested\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should handle reply generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Network error\"\n    Received message:   \"OpenAI API error: Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 207 |\u001b[39m         }\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 209 |\u001b[39m       }\n         \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:195:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:191:62)\n\n  ● AI Module › generateReply › should validate confidence values\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should query organizational memory successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should handle empty message context\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should generate meeting notes successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should handle meeting notes generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"API limit exceeded\"\n    Received message:   \"Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 343 |\u001b[39m     \n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n         \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:375:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:365:70)\n\n  ● AI Module › generateMeetingNotes › should extract participants from messages\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\nPASS tests/performance/performance.test.ts (6.236 s)\n  Performance Tests\n    Database Performance\n      √ should handle small queries efficiently (19 ms)\n      √ should handle medium queries within acceptable time (60 ms)\n      √ should handle concurrent queries efficiently (16 ms)\n      √ should maintain performance with repeated queries (77 ms)\n    AI Processing Performance\n      √ should process small inputs quickly (63 ms)\n      √ should scale reasonably with input size (327 ms)\n      √ should handle multiple AI requests concurrently (110 ms)\n      √ should not have memory leaks with repeated processing (625 ms)\n    WebSocket Performance\n      √ should broadcast messages quickly (15 ms)\n      √ should handle multiple message broadcasts efficiently (202 ms)\n      √ should scale linearly with message count (138 ms)\n    Memory Usage\n      √ should not accumulate memory with repeated operations (1 ms)\n      √ should handle large message arrays efficiently (11 ms)\n    Load Testing Simulation\n      √ should handle simulated user load (65 ms)\n      √ should handle burst traffic (61 ms)\n    Resource Monitoring\n      √ should monitor CPU usage patterns (14 ms)\n      √ should monitor I/O operation patterns (16 ms)\n\nPASS tests/shared/schema.test.ts (5.028 s)\n  Database Schema Validation\n    User Schema\n      √ should validate user data structure (2 ms)\n      √ should validate username uniqueness constraint\n      √ should validate email uniqueness constraint\n    Channel Schema\n      √ should validate channel data structure (2 ms)\n      √ should validate channel name uniqueness\n      √ should validate createdBy references user (1 ms)\n    Message Schema\n      √ should validate message data structure (1 ms)\n      √ should validate message belongs to channel or is DM (1 ms)\n      √ should validate thread message references parent\n    AI Suggestions Schema\n      √ should validate AI suggestion data structure (1 ms)\n      √ should validate confidence range (1 ms)\n    Meeting Notes Schema\n      √ should validate meeting notes data structure (1 ms)\n      √ should validate meeting notes content structure (5 ms)\n    Relational Integrity\n      √ should validate foreign key relationships (1 ms)\n      √ should validate cascading deletes\n    Data Constraints\n      √ should validate string length constraints\n      √ should validate email format (1 ms)\n      √ should validate numeric constraints (3 ms)\n\nPASS tests/integration/api-integration.test.ts\n  End-to-End API Integration Tests\n    Complete User Workflow\n      √ user can view channels, send messages, and get AI suggestions (73 ms)\n      √ user can create channel and manage membership (17 ms)\n      √ user can search messages and query org memory (13 ms)\n      √ user can generate and view meeting notes (10 ms)\n      √ user can analyze tone of messages (4 ms)\n    Error Handling Integration\n      √ handles non-existent channel gracefully (4 ms)\n      √ handles invalid message data (6 ms)\n      √ handles invalid AI request data (4 ms)\n      √ handles invalid meeting notes generation (4 ms)\n    Data Consistency Tests\n      √ message creation updates channel message list (11 ms)\n      √ channel creation appears in channels list (9 ms)\n    AI Integration Workflow\n      √ complete AI workflow: message → analysis → suggestion → notes (19 ms)\n\nFAIL tests/server/routes.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/server/routes.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Application' is not assignable to parameter of type 'Express'.\n      Type 'Application<Record<string, any>>' is missing the following properties from type 'Express': request, response\n\n    \u001b[7m54\u001b[0m     server = registerRoutes(app);\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~\u001b[0m\n\nFAIL tests/server/auth.test.ts (6.138 s)\n  Authentication\n    Password Hashing\n      √ should hash password successfully (70 ms)\n      √ should generate different hashes for same password (130 ms)\n      √ should hash empty password (64 ms)\n    Password Comparison\n      √ should verify correct password (139 ms)\n      √ should reject incorrect password (138 ms)\n      √ should reject password with different case (136 ms)\n      √ should handle empty password comparison (144 ms)\n      × should handle malformed hash (1 ms)\n\n  ● Authentication › Password Comparison › should handle malformed hash\n\n    TypeError: The \"salt\" argument must be of type string or an instance of ArrayBuffer, Buffer, TypedArray, or DataView. Received undefined\n\n    \u001b[0m \u001b[90m 25 |\u001b[39m   \u001b[36mconst\u001b[39m [hashed\u001b[33m,\u001b[39m salt] \u001b[33m=\u001b[39m stored\u001b[33m.\u001b[39msplit(\u001b[32m\".\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m hashedBuf \u001b[33m=\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(hashed\u001b[33m,\u001b[39m \u001b[32m\"hex\"\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m   \u001b[36mconst\u001b[39m suppliedBuf \u001b[33m=\u001b[39m (\u001b[36mawait\u001b[39m scryptAsync(supplied\u001b[33m,\u001b[39m salt\u001b[33m,\u001b[39m \u001b[35m64\u001b[39m)) \u001b[36mas\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 28 |\u001b[39m   \u001b[36mreturn\u001b[39m timingSafeEqual(hashedBuf\u001b[33m,\u001b[39m suppliedBuf)\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m }\n     \u001b[90m 30 |\u001b[39m\u001b[0m\n\n      at server/auth.ts:27:30\n      at server/auth.ts:8:71\n      at Object.<anonymous>.__awaiter (server/auth.ts:4:12)\n      at comparePasswords (server/auth.ts:33:12)\n      at tests/server/auth.test.ts:85:45\n      at tests/server/auth.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/auth.test.ts:4:12)\n      at Object.<anonymous> (tests/server/auth.test.ts:80:53)\n\nFAIL tests/client/websocket.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/hooks/use-websocket' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { useWebSocket } from '../../../client/src/hooks/use-websocket';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2739: \u001b[0mType 'Mock<any, [], any>' is missing the following properties from type '{ new (url: string | URL, protocols?: string | string[] | undefined): WebSocket; prototype: WebSocket; readonly CONNECTING: 0; readonly OPEN: 1; readonly CLOSING: 2; readonly CLOSED: 3; }': CONNECTING, OPEN, CLOSING, CLOSED\n\n    \u001b[7m76\u001b[0m     global.WebSocket = jest.fn(() => mockWebSocket);\n    \u001b[7m  \u001b[0m \u001b[91m    ~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/client/chat-area.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/chat-area.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/components/chat-area' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { ChatArea } from '../../../client/src/components/chat-area';\n    \u001b[7m \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/client/auth-page.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Mock<UnknownFunction>' is not assignable to type '{ (input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>; (input: string | URL | Request, init?: RequestInit | undefined): Promise<...>; }'.\n      Type 'unknown' is not assignable to type 'Promise<Response>'.\n\n    \u001b[7m10\u001b[0m global.fetch = jest.fn();\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m44\u001b[0m     expect(screen.getByText('Sign In')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m45\u001b[0m     expect(screen.getByPlaceholderText('Username')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m46\u001b[0m     expect(screen.getByPlaceholderText('Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m47\u001b[0m     expect(screen.getByRole('button', { name: /sign in/i })).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                             ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m56\u001b[0m     expect(screen.getByText('Create Account')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m57\u001b[0m     expect(screen.getByPlaceholderText('Display Name')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m58\u001b[0m     expect(screen.getByPlaceholderText('Email')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m59\u001b[0m     expect(screen.getByPlaceholderText('Confirm Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m64\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m65\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m66\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m67\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m91\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m91\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m92\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m93\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m94\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m145\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m145\u001b[0m       expect(screen.getByText(/username is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m146\u001b[0m       expect(screen.getByText(/password is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m151\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'never'.\n\n    \u001b[7m151\u001b[0m     (global.fetch as jest.Mock).mockRejectedValueOnce(new Error('Invalid credentials'));\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m165\u001b[0m       expect(screen.getByText(/invalid credentials/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m196\u001b[0m       expect(screen.getByText(/passwords do not match/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m214\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ user: { id: number; username: string; displayName: string; }; isLoading: boolean; error: null; loginMutation: any; logoutMutation: any; registerMutation: any; }' is not assignable to type 'AuthContextType'.\n      Types of property 'user' are incompatible.\n        Type '{ id: number; username: string; displayName: string; }' is missing the following properties from type '{ title: string | null; status: string; id: number; username: string; password: string; email: string; displayName: string; avatar: string | null; createdAt: Date; }': title, status, password, email, and 2 more.\n\n    \u001b[7m214\u001b[0m         <AuthContext.Provider value={mockAuthContext}>\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/react/index.d.ts\u001b[0m:\u001b[93m609\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m609\u001b[0m         value: T;\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\n        The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & ProviderProps<AuthContextType | null>'\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toHaveTextContent' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m220\u001b[0m     expect(screen.getByTestId('redirect')).toHaveTextContent('/');\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m242\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m242\u001b[0m     expect(screen.getByText(/loading/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 6 failed, 3 passed, 9 total\nTests:       11 failed, 56 passed, 67 total\nSnapshots:   0 total\nTime:        52.253 s\nRan all test suites.\n"
      ]
    },
    {
      "name": "Integration Tests",
      "status": "failed",
      "tests": 0,
      "passed": 0,
      "failed": 0,
      "duration": 0,
      "errors": [
        "Command failed: npx jest tests/integration/**/*.test.ts --verbose --json\nFAIL tests/server/ai.test.ts (5.832 s)\n  AI Module\n    analyzeTone\n      × should analyze tone successfully (7 ms)\n      √ should handle analysis errors gracefully (1 ms)\n      √ should handle invalid JSON response (1 ms)\n    generateReply\n      × should generate single reply successfully\n      × should generate multiple replies when requested (1 ms)\n      × should handle reply generation errors (11 ms)\n      × should validate confidence values\n    queryOrgMemory\n      × should query organizational memory successfully (1 ms)\n      × should handle empty message context (1 ms)\n    generateMeetingNotes\n      × should generate meeting notes successfully\n      × should handle meeting notes generation errors (4 ms)\n      × should extract participants from messages (1 ms)\n\n  ● AI Module › analyzeTone › should analyze tone successfully\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  6\n\n      Object {\n        \"clarity\": \"clear\",\n    -   \"confidence\": 85,\n    -   \"explanation\": \"The message is clear but could be more engaging\",\n    -   \"impact\": \"high\",\n    -   \"suggestedTones\": Array [\n    -     \"friendly\",\n    -     \"casual\",\n    -   ],\n    -   \"suggestions\": Array [\n    -     \"Consider being more direct\",\n    -   ],\n    -   \"tone\": \"professional\",\n    +   \"confidence\": 0,\n    +   \"explanation\": \"\",\n    +   \"impact\": \"medium\",\n    +   \"suggestedTones\": Array [],\n    +   \"suggestions\": Array [],\n    +   \"tone\": \"neutral\",\n      }\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m analyzeTone(\u001b[32m'Hello team, please review this document.'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual({\n     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m         tone\u001b[33m:\u001b[39m \u001b[32m'professional'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 57 |\u001b[39m         impact\u001b[33m:\u001b[39m \u001b[32m'high'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 58 |\u001b[39m         clarity\u001b[33m:\u001b[39m \u001b[32m'clear'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at tests/server/ai.test.ts:55:22\n      at fulfilled (tests/server/ai.test.ts:5:58)\n\n  ● AI Module › generateReply › should generate single reply successfully\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should generate multiple replies when requested\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should handle reply generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Network error\"\n    Received message:   \"OpenAI API error: Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 207 |\u001b[39m         }\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 209 |\u001b[39m       }\n         \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:195:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:191:62)\n\n  ● AI Module › generateReply › should validate confidence values\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should query organizational memory successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should handle empty message context\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should generate meeting notes successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should handle meeting notes generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"API limit exceeded\"\n    Received message:   \"Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 343 |\u001b[39m     \n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n         \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:375:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:365:70)\n\n  ● AI Module › generateMeetingNotes › should extract participants from messages\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\nFAIL tests/server/auth.test.ts\n  Authentication\n    Password Hashing\n      √ should hash password successfully (47 ms)\n      √ should generate different hashes for same password (97 ms)\n      √ should hash empty password (50 ms)\n    Password Comparison\n      √ should verify correct password (94 ms)\n      √ should reject incorrect password (102 ms)\n      √ should reject password with different case (98 ms)\n      √ should handle empty password comparison (99 ms)\n      × should handle malformed hash\n\n  ● Authentication › Password Comparison › should handle malformed hash\n\n    TypeError: The \"salt\" argument must be of type string or an instance of ArrayBuffer, Buffer, TypedArray, or DataView. Received undefined\n\n    \u001b[0m \u001b[90m 25 |\u001b[39m   \u001b[36mconst\u001b[39m [hashed\u001b[33m,\u001b[39m salt] \u001b[33m=\u001b[39m stored\u001b[33m.\u001b[39msplit(\u001b[32m\".\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m hashedBuf \u001b[33m=\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(hashed\u001b[33m,\u001b[39m \u001b[32m\"hex\"\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m   \u001b[36mconst\u001b[39m suppliedBuf \u001b[33m=\u001b[39m (\u001b[36mawait\u001b[39m scryptAsync(supplied\u001b[33m,\u001b[39m salt\u001b[33m,\u001b[39m \u001b[35m64\u001b[39m)) \u001b[36mas\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 28 |\u001b[39m   \u001b[36mreturn\u001b[39m timingSafeEqual(hashedBuf\u001b[33m,\u001b[39m suppliedBuf)\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m }\n     \u001b[90m 30 |\u001b[39m\u001b[0m\n\n      at server/auth.ts:27:30\n      at server/auth.ts:8:71\n      at Object.<anonymous>.__awaiter (server/auth.ts:4:12)\n      at comparePasswords (server/auth.ts:33:12)\n      at tests/server/auth.test.ts:85:45\n      at tests/server/auth.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/auth.test.ts:4:12)\n      at Object.<anonymous> (tests/server/auth.test.ts:80:53)\n\nPASS tests/performance/performance.test.ts\n  Performance Tests\n    Database Performance\n      √ should handle small queries efficiently (24 ms)\n      √ should handle medium queries within acceptable time (60 ms)\n      √ should handle concurrent queries efficiently (15 ms)\n      √ should maintain performance with repeated queries (78 ms)\n    AI Processing Performance\n      √ should process small inputs quickly (61 ms)\n      √ should scale reasonably with input size (314 ms)\n      √ should handle multiple AI requests concurrently (110 ms)\n      √ should not have memory leaks with repeated processing (622 ms)\n    WebSocket Performance\n      √ should broadcast messages quickly (14 ms)\n      √ should handle multiple message broadcasts efficiently (217 ms)\n      √ should scale linearly with message count (139 ms)\n    Memory Usage\n      √ should not accumulate memory with repeated operations\n      √ should handle large message arrays efficiently (6 ms)\n    Load Testing Simulation\n      √ should handle simulated user load (56 ms)\n      √ should handle burst traffic (62 ms)\n    Resource Monitoring\n      √ should monitor CPU usage patterns (12 ms)\n      √ should monitor I/O operation patterns (20 ms)\n\nPASS tests/shared/schema.test.ts\n  Database Schema Validation\n    User Schema\n      √ should validate user data structure (1 ms)\n      √ should validate username uniqueness constraint\n      √ should validate email uniqueness constraint\n    Channel Schema\n      √ should validate channel data structure (2 ms)\n      √ should validate channel name uniqueness\n      √ should validate createdBy references user\n    Message Schema\n      √ should validate message data structure (1 ms)\n      √ should validate message belongs to channel or is DM\n      √ should validate thread message references parent (1 ms)\n    AI Suggestions Schema\n      √ should validate AI suggestion data structure\n      √ should validate confidence range\n    Meeting Notes Schema\n      √ should validate meeting notes data structure (1 ms)\n      √ should validate meeting notes content structure (4 ms)\n    Relational Integrity\n      √ should validate foreign key relationships (1 ms)\n      √ should validate cascading deletes\n    Data Constraints\n      √ should validate string length constraints (1 ms)\n      √ should validate email format\n      √ should validate numeric constraints (1 ms)\n\nPASS tests/integration/api-integration.test.ts\n  End-to-End API Integration Tests\n    Complete User Workflow\n      √ user can view channels, send messages, and get AI suggestions (43 ms)\n      √ user can create channel and manage membership (10 ms)\n      √ user can search messages and query org memory (9 ms)\n      √ user can generate and view meeting notes (6 ms)\n      √ user can analyze tone of messages (3 ms)\n    Error Handling Integration\n      √ handles non-existent channel gracefully (2 ms)\n      √ handles invalid message data (4 ms)\n      √ handles invalid AI request data (3 ms)\n      √ handles invalid meeting notes generation (3 ms)\n    Data Consistency Tests\n      √ message creation updates channel message list (7 ms)\n      √ channel creation appears in channels list (7 ms)\n    AI Integration Workflow\n      √ complete AI workflow: message → analysis → suggestion → notes (13 ms)\n\nFAIL tests/server/routes.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/server/routes.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Application' is not assignable to parameter of type 'Express'.\n      Type 'Application<Record<string, any>>' is missing the following properties from type 'Express': request, response\n\n    \u001b[7m54\u001b[0m     server = registerRoutes(app);\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~\u001b[0m\n\nFAIL tests/client/websocket.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/hooks/use-websocket' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { useWebSocket } from '../../../client/src/hooks/use-websocket';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2739: \u001b[0mType 'Mock<any, [], any>' is missing the following properties from type '{ new (url: string | URL, protocols?: string | string[] | undefined): WebSocket; prototype: WebSocket; readonly CONNECTING: 0; readonly OPEN: 1; readonly CLOSING: 2; readonly CLOSED: 3; }': CONNECTING, OPEN, CLOSING, CLOSED\n\n    \u001b[7m76\u001b[0m     global.WebSocket = jest.fn(() => mockWebSocket);\n    \u001b[7m  \u001b[0m \u001b[91m    ~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/client/chat-area.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/chat-area.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/components/chat-area' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { ChatArea } from '../../../client/src/components/chat-area';\n    \u001b[7m \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/client/auth-page.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Mock<UnknownFunction>' is not assignable to type '{ (input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>; (input: string | URL | Request, init?: RequestInit | undefined): Promise<...>; }'.\n      Type 'unknown' is not assignable to type 'Promise<Response>'.\n\n    \u001b[7m10\u001b[0m global.fetch = jest.fn();\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m44\u001b[0m     expect(screen.getByText('Sign In')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m45\u001b[0m     expect(screen.getByPlaceholderText('Username')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m46\u001b[0m     expect(screen.getByPlaceholderText('Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m47\u001b[0m     expect(screen.getByRole('button', { name: /sign in/i })).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                             ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m56\u001b[0m     expect(screen.getByText('Create Account')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m57\u001b[0m     expect(screen.getByPlaceholderText('Display Name')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m58\u001b[0m     expect(screen.getByPlaceholderText('Email')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m59\u001b[0m     expect(screen.getByPlaceholderText('Confirm Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m64\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m65\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m66\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m67\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m91\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m91\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m92\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m93\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m94\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m145\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m145\u001b[0m       expect(screen.getByText(/username is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m146\u001b[0m       expect(screen.getByText(/password is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m151\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'never'.\n\n    \u001b[7m151\u001b[0m     (global.fetch as jest.Mock).mockRejectedValueOnce(new Error('Invalid credentials'));\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m165\u001b[0m       expect(screen.getByText(/invalid credentials/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m196\u001b[0m       expect(screen.getByText(/passwords do not match/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m214\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ user: { id: number; username: string; displayName: string; }; isLoading: boolean; error: null; loginMutation: any; logoutMutation: any; registerMutation: any; }' is not assignable to type 'AuthContextType'.\n      Types of property 'user' are incompatible.\n        Type '{ id: number; username: string; displayName: string; }' is missing the following properties from type '{ title: string | null; status: string; id: number; username: string; password: string; email: string; displayName: string; avatar: string | null; createdAt: Date; }': title, status, password, email, and 2 more.\n\n    \u001b[7m214\u001b[0m         <AuthContext.Provider value={mockAuthContext}>\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/react/index.d.ts\u001b[0m:\u001b[93m609\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m609\u001b[0m         value: T;\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\n        The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & ProviderProps<AuthContextType | null>'\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toHaveTextContent' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m220\u001b[0m     expect(screen.getByTestId('redirect')).toHaveTextContent('/');\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m242\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m242\u001b[0m     expect(screen.getByText(/loading/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 6 failed, 3 passed, 9 total\nTests:       11 failed, 56 passed, 67 total\nSnapshots:   0 total\nTime:        24.876 s, estimated 32 s\nRan all test suites.\n"
      ]
    },
    {
      "name": "Performance Tests",
      "status": "failed",
      "tests": 0,
      "passed": 0,
      "failed": 0,
      "duration": 0,
      "errors": [
        "Command failed: npx jest tests/performance/**/*.test.ts --verbose --json\nFAIL tests/server/ai.test.ts (5.762 s)\n  AI Module\n    analyzeTone\n      × should analyze tone successfully (14 ms)\n      √ should handle analysis errors gracefully (1 ms)\n      √ should handle invalid JSON response (1 ms)\n    generateReply\n      × should generate single reply successfully\n      × should generate multiple replies when requested (1 ms)\n      × should handle reply generation errors (15 ms)\n      × should validate confidence values (1 ms)\n    queryOrgMemory\n      × should query organizational memory successfully\n      × should handle empty message context\n    generateMeetingNotes\n      × should generate meeting notes successfully (1 ms)\n      × should handle meeting notes generation errors (3 ms)\n      × should extract participants from messages (1 ms)\n\n  ● AI Module › analyzeTone › should analyze tone successfully\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 11\n    + Received  +  6\n\n      Object {\n        \"clarity\": \"clear\",\n    -   \"confidence\": 85,\n    -   \"explanation\": \"The message is clear but could be more engaging\",\n    -   \"impact\": \"high\",\n    -   \"suggestedTones\": Array [\n    -     \"friendly\",\n    -     \"casual\",\n    -   ],\n    -   \"suggestions\": Array [\n    -     \"Consider being more direct\",\n    -   ],\n    -   \"tone\": \"professional\",\n    +   \"confidence\": 0,\n    +   \"explanation\": \"\",\n    +   \"impact\": \"medium\",\n    +   \"suggestedTones\": Array [],\n    +   \"suggestions\": Array [],\n    +   \"tone\": \"neutral\",\n      }\n\n    \u001b[0m \u001b[90m 53 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m analyzeTone(\u001b[32m'Hello team, please review this document.'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 55 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual({\n     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 56 |\u001b[39m         tone\u001b[33m:\u001b[39m \u001b[32m'professional'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 57 |\u001b[39m         impact\u001b[33m:\u001b[39m \u001b[32m'high'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 58 |\u001b[39m         clarity\u001b[33m:\u001b[39m \u001b[32m'clear'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at tests/server/ai.test.ts:55:22\n      at fulfilled (tests/server/ai.test.ts:5:58)\n\n  ● AI Module › generateReply › should generate single reply successfully\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should generate multiple replies when requested\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateReply › should handle reply generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"Network error\"\n    Received message:   \"OpenAI API error: Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 207 |\u001b[39m         }\n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 209 |\u001b[39m       }\n         \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:195:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:191:62)\n\n  ● AI Module › generateReply › should validate confidence values\n\n    OpenAI API error: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m           \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Invalid OpenAI API key\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 207 |\u001b[39m         }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m         \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m`OpenAI API error: ${apiError.message}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m       }\n     \u001b[90m 210 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to communicate with OpenAI API\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:208:15\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should query organizational memory successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › queryOrgMemory › should handle empty message context\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m     }\n     \u001b[90m 256 |\u001b[39m\u001b[0m\n\n      at server/ai.ts:253:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should generate meeting notes successfully\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\n  ● AI Module › generateMeetingNotes › should handle meeting notes generation errors\n\n    expect(received).rejects.toThrow(expected)\n\n    Expected substring: \"API limit exceeded\"\n    Received message:   \"Cannot read properties of undefined (reading 'choices')\"\n\n        \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 343 |\u001b[39m     \n        \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n         \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n         \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n         \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n      at Object.toThrow (node_modules/expect/build/index.js:218:22)\n      at tests/server/ai.test.ts:375:18\n      at tests/server/ai.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/ai.test.ts:4:12)\n      at Object.<anonymous> (tests/server/ai.test.ts:365:70)\n\n  ● AI Module › generateMeetingNotes › should extract participants from messages\n\n    TypeError: Cannot read properties of undefined (reading 'choices')\n\n    \u001b[0m \u001b[90m 342 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m\"[AI] Successfully received response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 343 |\u001b[39m     \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 344 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mresponse\u001b[33m.\u001b[39mchoices[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mcontent) {\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 345 |\u001b[39m       console\u001b[33m.\u001b[39merror(\u001b[32m\"[AI] Empty response from OpenAI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 346 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m\"Failed to generate meeting notes: Empty response from AI\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 347 |\u001b[39m     }\u001b[0m\n\n      at server/ai.ts:344:19\n      at fulfilled (server/ai.ts:5:58)\n\nFAIL tests/server/auth.test.ts\n  Authentication\n    Password Hashing\n      √ should hash password successfully (53 ms)\n      √ should generate different hashes for same password (96 ms)\n      √ should hash empty password (52 ms)\n    Password Comparison\n      √ should verify correct password (97 ms)\n      √ should reject incorrect password (97 ms)\n      √ should reject password with different case (96 ms)\n      √ should handle empty password comparison (95 ms)\n      × should handle malformed hash\n\n  ● Authentication › Password Comparison › should handle malformed hash\n\n    TypeError: The \"salt\" argument must be of type string or an instance of ArrayBuffer, Buffer, TypedArray, or DataView. Received undefined\n\n    \u001b[0m \u001b[90m 25 |\u001b[39m   \u001b[36mconst\u001b[39m [hashed\u001b[33m,\u001b[39m salt] \u001b[33m=\u001b[39m stored\u001b[33m.\u001b[39msplit(\u001b[32m\".\"\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m   \u001b[36mconst\u001b[39m hashedBuf \u001b[33m=\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(hashed\u001b[33m,\u001b[39m \u001b[32m\"hex\"\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m   \u001b[36mconst\u001b[39m suppliedBuf \u001b[33m=\u001b[39m (\u001b[36mawait\u001b[39m scryptAsync(supplied\u001b[33m,\u001b[39m salt\u001b[33m,\u001b[39m \u001b[35m64\u001b[39m)) \u001b[36mas\u001b[39m \u001b[33mBuffer\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 28 |\u001b[39m   \u001b[36mreturn\u001b[39m timingSafeEqual(hashedBuf\u001b[33m,\u001b[39m suppliedBuf)\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m }\n     \u001b[90m 30 |\u001b[39m\u001b[0m\n\n      at server/auth.ts:27:30\n      at server/auth.ts:8:71\n      at Object.<anonymous>.__awaiter (server/auth.ts:4:12)\n      at comparePasswords (server/auth.ts:33:12)\n      at tests/server/auth.test.ts:85:45\n      at tests/server/auth.test.ts:8:71\n      at Object.<anonymous>.__awaiter (tests/server/auth.test.ts:4:12)\n      at Object.<anonymous> (tests/server/auth.test.ts:80:53)\n\nPASS tests/performance/performance.test.ts\n  Performance Tests\n    Database Performance\n      √ should handle small queries efficiently (23 ms)\n      √ should handle medium queries within acceptable time (62 ms)\n      √ should handle concurrent queries efficiently (16 ms)\n      √ should maintain performance with repeated queries (79 ms)\n    AI Processing Performance\n      √ should process small inputs quickly (63 ms)\n      √ should scale reasonably with input size (327 ms)\n      √ should handle multiple AI requests concurrently (109 ms)\n      √ should not have memory leaks with repeated processing (624 ms)\n    WebSocket Performance\n      √ should broadcast messages quickly (14 ms)\n      √ should handle multiple message broadcasts efficiently (203 ms)\n      √ should scale linearly with message count (141 ms)\n    Memory Usage\n      √ should not accumulate memory with repeated operations (1 ms)\n      √ should handle large message arrays efficiently (10 ms)\n    Load Testing Simulation\n      √ should handle simulated user load (52 ms)\n      √ should handle burst traffic (66 ms)\n    Resource Monitoring\n      √ should monitor CPU usage patterns (9 ms)\n      √ should monitor I/O operation patterns (20 ms)\n\nPASS tests/integration/api-integration.test.ts\n  End-to-End API Integration Tests\n    Complete User Workflow\n      √ user can view channels, send messages, and get AI suggestions (43 ms)\n      √ user can create channel and manage membership (10 ms)\n      √ user can search messages and query org memory (9 ms)\n      √ user can generate and view meeting notes (7 ms)\n      √ user can analyze tone of messages (2 ms)\n    Error Handling Integration\n      √ handles non-existent channel gracefully (4 ms)\n      √ handles invalid message data (3 ms)\n      √ handles invalid AI request data (3 ms)\n      √ handles invalid meeting notes generation (3 ms)\n    Data Consistency Tests\n      √ message creation updates channel message list (7 ms)\n      √ channel creation appears in channels list (8 ms)\n    AI Integration Workflow\n      √ complete AI workflow: message → analysis → suggestion → notes (9 ms)\n\nPASS tests/shared/schema.test.ts\n  Database Schema Validation\n    User Schema\n      √ should validate user data structure (2 ms)\n      √ should validate username uniqueness constraint\n      √ should validate email uniqueness constraint\n    Channel Schema\n      √ should validate channel data structure (5 ms)\n      √ should validate channel name uniqueness\n      √ should validate createdBy references user\n    Message Schema\n      √ should validate message data structure (1 ms)\n      √ should validate message belongs to channel or is DM\n      √ should validate thread message references parent\n    AI Suggestions Schema\n      √ should validate AI suggestion data structure\n      √ should validate confidence range (1 ms)\n    Meeting Notes Schema\n      √ should validate meeting notes data structure\n      √ should validate meeting notes content structure\n    Relational Integrity\n      √ should validate foreign key relationships\n      √ should validate cascading deletes (1 ms)\n    Data Constraints\n      √ should validate string length constraints\n      √ should validate email format (1 ms)\n      √ should validate numeric constraints\n\nFAIL tests/client/websocket.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/hooks/use-websocket' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { useWebSocket } from '../../../client/src/hooks/use-websocket';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/websocket.test.tsx\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m5\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2739: \u001b[0mType 'Mock<any, [], any>' is missing the following properties from type '{ new (url: string | URL, protocols?: string | string[] | undefined): WebSocket; prototype: WebSocket; readonly CONNECTING: 0; readonly OPEN: 1; readonly CLOSING: 2; readonly CLOSED: 3; }': CONNECTING, OPEN, CLOSING, CLOSED\n\n    \u001b[7m76\u001b[0m     global.WebSocket = jest.fn(() => mockWebSocket);\n    \u001b[7m  \u001b[0m \u001b[91m    ~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/server/routes.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/server/routes.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Application' is not assignable to parameter of type 'Express'.\n      Type 'Application<Record<string, any>>' is missing the following properties from type 'Express': request, response\n\n    \u001b[7m54\u001b[0m     server = registerRoutes(app);\n    \u001b[7m  \u001b[0m \u001b[91m                            ~~~\u001b[0m\n\nFAIL tests/client/chat-area.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/chat-area.test.tsx\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../../client/src/components/chat-area' or its corresponding type declarations.\n\n    \u001b[7m4\u001b[0m import { ChatArea } from '../../../client/src/components/chat-area';\n    \u001b[7m \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/client/auth-page.test.tsx\n  ● Test suite failed to run\n\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Mock<UnknownFunction>' is not assignable to type '{ (input: URL | RequestInfo, init?: RequestInit | undefined): Promise<Response>; (input: string | URL | Request, init?: RequestInit | undefined): Promise<...>; }'.\n      Type 'unknown' is not assignable to type 'Promise<Response>'.\n\n    \u001b[7m10\u001b[0m global.fetch = jest.fn();\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m44\u001b[0m     expect(screen.getByText('Sign In')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m45\u001b[0m     expect(screen.getByPlaceholderText('Username')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m46\u001b[0m     expect(screen.getByPlaceholderText('Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m47\u001b[0m     expect(screen.getByRole('button', { name: /sign in/i })).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                             ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m56\u001b[0m     expect(screen.getByText('Create Account')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m57\u001b[0m     expect(screen.getByPlaceholderText('Display Name')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m58\u001b[0m     expect(screen.getByPlaceholderText('Email')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m59\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m59\u001b[0m     expect(screen.getByPlaceholderText('Confirm Password')).toBeInTheDocument();\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m64\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m65\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m66\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m67\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m91\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ ok: boolean; json: () => Promise<{ id: number; username: string; displayName: string; }>; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m91\u001b[0m     (global.fetch as jest.Mock).mockResolvedValueOnce({\n    \u001b[7m  \u001b[0m \u001b[91m                                                      ~\u001b[0m\n    \u001b[7m92\u001b[0m       ok: true,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m93\u001b[0m       json: async () => mockUser,\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m94\u001b[0m     });\n    \u001b[7m  \u001b[0m \u001b[91m~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m145\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m145\u001b[0m       expect(screen.getByText(/username is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m146\u001b[0m       expect(screen.getByText(/password is required/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m151\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Error' is not assignable to parameter of type 'never'.\n\n    \u001b[7m151\u001b[0m     (global.fetch as jest.Mock).mockRejectedValueOnce(new Error('Invalid credentials'));\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m165\u001b[0m       expect(screen.getByText(/invalid credentials/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m59\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m196\u001b[0m       expect(screen.getByText(/passwords do not match/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                                          ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m214\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ user: { id: number; username: string; displayName: string; }; isLoading: boolean; error: null; loginMutation: any; logoutMutation: any; registerMutation: any; }' is not assignable to type 'AuthContextType'.\n      Types of property 'user' are incompatible.\n        Type '{ id: number; username: string; displayName: string; }' is missing the following properties from type '{ title: string | null; status: string; id: number; username: string; password: string; email: string; displayName: string; avatar: string | null; createdAt: Date; }': title, status, password, email, and 2 more.\n\n    \u001b[7m214\u001b[0m         <AuthContext.Provider value={mockAuthContext}>\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/react/index.d.ts\u001b[0m:\u001b[93m609\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m609\u001b[0m         value: T;\n        \u001b[7m   \u001b[0m \u001b[96m        ~~~~~\u001b[0m\n        The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & ProviderProps<AuthContextType | null>'\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m220\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toHaveTextContent' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m220\u001b[0m     expect(screen.getByTestId('redirect')).toHaveTextContent('/');\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/client/auth-page.test.tsx\u001b[0m:\u001b[93m242\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toBeInTheDocument' does not exist on type 'Matchers<void, HTMLElement> & SnapshotMatchers<void, HTMLElement> & Inverse<JestMatchers<void, HTMLElement>> & PromiseMatchers<...>'.\n\n    \u001b[7m242\u001b[0m     expect(screen.getByText(/loading/i)).toBeInTheDocument();\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 6 failed, 3 passed, 9 total\nTests:       11 failed, 56 passed, 67 total\nSnapshots:   0 total\nTime:        24.462 s\nRan all test suites.\n"
      ]
    }
  ],
  "recommendations": [
    {
      "type": "critical",
      "message": "Test pass rate is 0.0%. Aim for >90% to ensure reliability.",
      "action": "Review and fix failing tests before deployment"
    },
    {
      "type": "important",
      "message": "Code coverage is 0%. Aim for >80% to ensure thorough testing.",
      "action": "Add more unit tests to cover untested code paths"
    },
    {
      "type": "critical",
      "message": "3 test categories failed completely.",
      "action": "Fix test setup and infrastructure issues"
    },
    {
      "type": "security",
      "message": "Add security-focused tests for authentication and authorization.",
      "action": "Implement tests for SQL injection, XSS, and CSRF protection"
    },
    {
      "type": "ai",
      "message": "Add comprehensive tests for AI error handling and edge cases.",
      "action": "Test AI service failures, rate limiting, and invalid responses"
    }
  ]
}